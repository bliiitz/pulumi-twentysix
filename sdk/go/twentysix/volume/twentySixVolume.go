// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package volume

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-twentysix/sdk/go/twentysix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TwentySixVolume struct {
	pulumi.CustomResourceState

	IpfsHash    pulumi.StringOutput `pulumi:"ipfsHash"`
	MessageHash pulumi.StringOutput `pulumi:"messageHash"`
}

// NewTwentySixVolume registers a new resource with the given unique name, arguments, and options.
func NewTwentySixVolume(ctx *pulumi.Context,
	name string, args *TwentySixVolumeArgs, opts ...pulumi.ResourceOption) (*TwentySixVolume, error) {
	if args == nil {
		args = &TwentySixVolumeArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TwentySixVolume
	err := ctx.RegisterResource("twentysix:volume:TwentySixVolume", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTwentySixVolume gets an existing TwentySixVolume resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTwentySixVolume(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TwentySixVolumeState, opts ...pulumi.ResourceOption) (*TwentySixVolume, error) {
	var resource TwentySixVolume
	err := ctx.ReadResource("twentysix:volume:TwentySixVolume", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TwentySixVolume resources.
type twentySixVolumeState struct {
}

type TwentySixVolumeState struct {
}

func (TwentySixVolumeState) ElementType() reflect.Type {
	return reflect.TypeOf((*twentySixVolumeState)(nil)).Elem()
}

type twentySixVolumeArgs struct {
}

// The set of arguments for constructing a TwentySixVolume resource.
type TwentySixVolumeArgs struct {
}

func (TwentySixVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*twentySixVolumeArgs)(nil)).Elem()
}

type TwentySixVolumeInput interface {
	pulumi.Input

	ToTwentySixVolumeOutput() TwentySixVolumeOutput
	ToTwentySixVolumeOutputWithContext(ctx context.Context) TwentySixVolumeOutput
}

func (*TwentySixVolume) ElementType() reflect.Type {
	return reflect.TypeOf((**TwentySixVolume)(nil)).Elem()
}

func (i *TwentySixVolume) ToTwentySixVolumeOutput() TwentySixVolumeOutput {
	return i.ToTwentySixVolumeOutputWithContext(context.Background())
}

func (i *TwentySixVolume) ToTwentySixVolumeOutputWithContext(ctx context.Context) TwentySixVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwentySixVolumeOutput)
}

type TwentySixVolumeOutput struct{ *pulumi.OutputState }

func (TwentySixVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwentySixVolume)(nil)).Elem()
}

func (o TwentySixVolumeOutput) ToTwentySixVolumeOutput() TwentySixVolumeOutput {
	return o
}

func (o TwentySixVolumeOutput) ToTwentySixVolumeOutputWithContext(ctx context.Context) TwentySixVolumeOutput {
	return o
}

func (o TwentySixVolumeOutput) IpfsHash() pulumi.StringOutput {
	return o.ApplyT(func(v *TwentySixVolume) pulumi.StringOutput { return v.IpfsHash }).(pulumi.StringOutput)
}

func (o TwentySixVolumeOutput) MessageHash() pulumi.StringOutput {
	return o.ApplyT(func(v *TwentySixVolume) pulumi.StringOutput { return v.MessageHash }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TwentySixVolumeInput)(nil)).Elem(), &TwentySixVolume{})
	pulumi.RegisterOutputType(TwentySixVolumeOutput{})
}
